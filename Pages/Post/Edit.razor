@page "/posts/{Id:int}/edit"
@attribute [Authorize(Roles = "Admin")]

@using Golb.Data
@using Golb.Services
@inject PostService service
@inject NavigationManager navigationManager

<h2>Edit Post</h2>

@if (post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@post" OnValidSubmit="@HandleValidSubmit">
        <div class="form-group">
            <label for="title">Title</label>
            <InputText id="title" class="form-control" @bind-Value="@post.Title" />
        </div>

        <div class="row">
            <div class="col-6">
                <input type="hidden" @bind-value="@post.Body" />
                <textarea rows="20" class="form-control" id="body" @bind="@post.Body" @bind:event="oninput" />
            </div>
            <div class="col-6">
                @((MarkupString) post.MarkupString)
            </div>
        </div>

        <a class="btn btn-warning" href="/posts/@post.Id">Cancel</a>
        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Post post;

    protected override async Task OnInitializedAsync()
    {
        post = await service.Get(Id);
    }

    private async void HandleValidSubmit()
    {
        post.PostedAt = DateTime.Now;
        await service.Update(post);
        navigationManager.NavigateTo("/posts/" + post.Id);
    }
}