@using Golb.Data

<EditForm Model="@post" OnValidSubmit="OnValidSubmit">
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="@post.Title" />
    </div>

    <div class="form-group">
        <label for="body">Body</label>

        <div class="row">
            <div class="col-6">
                <textarea rows="20" class="form-control" id="body" @bind="@post.Body" @bind:event="oninput" />
            </div>
            <div class="col-6">
                @((MarkupString) @post.MarkupString)
            </div>
        </div>
    </div>

    <a class="btn btn-warning" href="/posts/@post.Id">Cancel</a>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public Post post { get; set; }

    [Parameter]
    public EventCallback<EditContext> OnFormValidSubmit { get; set; }

    async Task OnValidSubmit(EditContext context)
    {
        await OnFormValidSubmit.InvokeAsync(context);
    }
}
